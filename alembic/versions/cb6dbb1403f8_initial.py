"""initial

Revision ID: cb6dbb1403f8
Revises: 
Create Date: 2025-03-29 13:43:43.455579

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'cb6dbb1403f8'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('parking_config',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('total_max_spots', sa.Integer(), nullable=False),
    sa.Column('owned', sa.Integer(), nullable=False),
    sa.Column('guest', sa.Integer(), nullable=False),
    sa.Column('special', sa.Integer(), nullable=False),
    sa.Column('rent', sa.Integer(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('role', sa.Enum('RESIDENT', 'ADMIN', 'MANAGER', 'TENANT', name='user_role_enum'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('vehicles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('license_plate', sa.String(length=20), nullable=False),
    sa.Column('is_special', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('license_plate')
    )
    op.create_index(op.f('ix_vehicles_id'), 'vehicles', ['id'], unique=False)
    op.create_table('parking_spots',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('spot_number', sa.String(length=10), nullable=False),
    sa.Column('type', sa.Enum('OWNED', 'RENT', 'GUEST', 'SPECIAL', name='spottype'), nullable=False),
    sa.Column('status', sa.Enum('OCCUPIED', 'AVAILABLE', 'BLOCKED', name='spotstatus'), nullable=False),
    sa.Column('current_vehicle_id', sa.Integer(), nullable=True),
    sa.Column('reserved_until', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('x_coordinate', sa.Float(), nullable=False),
    sa.Column('y_coordinate', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['current_vehicle_id'], ['vehicles.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('spot_number')
    )
    op.create_index(op.f('ix_parking_spots_id'), 'parking_spots', ['id'], unique=False)
    op.create_table('access_permissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('vehicle_id', sa.Integer(), nullable=False),
    sa.Column('parking_spot_id', sa.Integer(), nullable=True),
    sa.Column('permission_type', sa.Enum('PERMANENT', 'TEMPORARY', name='permissiontype'), nullable=False),
    sa.Column('valid_from', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('valid_until', sa.DateTime(timezone=True), nullable=True),
    sa.Column('granted_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['granted_by'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['parking_spot_id'], ['parking_spots.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['vehicle_id'], ['vehicles.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_access_permissions_id'), 'access_permissions', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_access_permissions_id'), table_name='access_permissions')
    op.drop_table('access_permissions')
    op.drop_index(op.f('ix_parking_spots_id'), table_name='parking_spots')
    op.drop_table('parking_spots')
    op.drop_index(op.f('ix_vehicles_id'), table_name='vehicles')
    op.drop_table('vehicles')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('parking_config')
    # ### end Alembic commands ###
